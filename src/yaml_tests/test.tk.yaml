- title: post todo - POST
  POST: http://localhost:3000/todos
  headers:
    Content-Type: application/json
  json:
    number: 5
  asserts:
    - ok: $.resp.json.number == 5
    - ok: $.resp.status == $.env.STATUS
    - number: $.resp.json.number

- title: fetches TODO items - GET
  GET: http://localhost:3000/todos
  asserts:
    - ok: $.resp.status == 200
    - array: $.resp.json.tasks
    - ok: $.resp.json.tasks[0] == "task one"
    - number: $.resp.json.tasks[1]
    - empty: $.resp.json.empty_str
    - empty: $.resp.json.empty_arr
    - null: $.resp.json.resp_null
  exports:
    header: $.resp.json.tasks[0]

- title: TODO ad items - POST
  POST: http://localhost:3000/todos
  headers:
    Content-Type: application/json
    Authorization: "{{header}}"
    X-Target: $.env.STATUS
  json:
    task: run tests
  asserts:
    - ok: $.resp.status == 201
  exports:
    todoItem: $.resp.json.id

- title: deletes TODO items - DELETE
  DELETE: "http://localhost:3000/todos/{{todoItem}}"
  asserts:
    - string: $.resp.json.task
    - number: $.resp.json.id
    - ok: $.resp.json.id == {{todoItem}}

- title: Adds Todo item - POST
  POST: http://localhost:3000/todos/
  json:
    task: "run tests"
  asserts:
    - ok: $.resp.status == 201
    - ok: $.resp.json.task == "run tests"
    # - ok: $.resp.json.completed
